import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { 
  BookOpen, 
  Search, 
  Filter, 
  Calendar,
  Droplets,
  Sun,
  Scissors,
  Bug,
  Leaf,
  Clock,
  Star,
  ChevronRight,
  Download
} from 'lucide-react';
import { useLanguage } from '../contexts/LanguageContext';

interface PlantGuide {
  id: string;
  name: {
    en: string;
    te: string;
  };
  category: string;
  difficulty: 'beginner' | 'intermediate' | 'advanced';
  season: string[];
  image: string;
  description: {
    en: string;
    te: string;
  };
  careSteps: {
    en: Array<{
      title: string;
      description: string;
      timing: string;
      tips: string[];
    }>;
    te: Array<{
      title: string;
      description: string;
      timing: string;
      tips: string[];
    }>;
  };
  commonIssues: {
    en: Array<{
      problem: string;
      solution: string;
    }>;
    te: Array<{
      problem: string;
      solution: string;
    }>;
  };
}

export default function PlantCareGuides() {
  const { language } = useLanguage();
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedDifficulty, setSelectedDifficulty] = useState('all');
  const [selectedGuide, setSelectedGuide] = useState<PlantGuide | null>(null);

  const plantGuides: PlantGuide[] = [
    {
      id: '1',
      name: {
        en: 'Tomato',
        te: '‡∞ü‡∞Æ‡∞æ‡∞ü‡±ã'
      },
      category: 'vegetables',
      difficulty: 'beginner',
      season: ['summer', 'monsoon'],
      image: 'üçÖ',
      description: {
        en: 'Easy to grow vegetable perfect for beginners. Rich in vitamins and great for home cooking.',
        te: '‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ï‡±Å‡∞≤‡∞ï‡±Å ‡∞™‡±Ü‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞∏‡±Å‡∞≤‡∞≠‡∞Æ‡±à‡∞® ‡∞ï‡±Ç‡∞∞‡∞ó‡∞æ‡∞Ø. ‡∞µ‡∞ø‡∞ü‡∞Æ‡∞ø‡∞®‡±ç‡∞≤‡±Å ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞°‡∞ø ‡∞á‡∞Ç‡∞ü‡∞ø ‡∞µ‡∞Ç‡∞ü‡∞ï‡∞æ‡∞≤‡∞ï‡±Å ‡∞Ö‡∞®‡±Å‡∞µ‡±à‡∞®‡∞¶‡∞ø.'
      },
      careSteps: {
        en: [
          {
            title: 'Planting',
            description: 'Plant seeds in well-draining soil with good sunlight',
            timing: 'Early summer',
            tips: ['Use quality seeds', 'Ensure 6+ hours sunlight', 'Water regularly but avoid overwatering']
          },
          {
            title: 'Watering',
            description: 'Water deeply but infrequently to encourage deep root growth',
            timing: 'Daily in summer, every 2 days in monsoon',
            tips: ['Water at base of plant', 'Avoid wetting leaves', 'Check soil moisture before watering']
          },
          {
            title: 'Fertilizing',
            description: 'Apply balanced fertilizer every 2-3 weeks',
            timing: 'Every 2-3 weeks during growing season',
            tips: ['Use organic compost', 'Avoid over-fertilizing', 'Stop fertilizing 2 weeks before harvest']
          }
        ],
        te: [
          {
            title: '‡∞®‡∞æ‡∞ü‡∞°‡∞Ç',
            description: '‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞µ‡±Ü‡∞≤‡±Å‡∞§‡±Å‡∞∞‡±Å ‡∞â‡∞®‡±ç‡∞® ‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞®‡±Ä‡∞ü‡∞ø ‡∞®‡∞ø‡∞∑‡±ç‡∞ï‡∞æ‡∞∏‡∞® ‡∞â‡∞®‡±ç‡∞® ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø‡∞≤‡±ã ‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å ‡∞®‡∞æ‡∞ü‡∞Ç‡∞°‡∞ø',
            timing: '‡∞µ‡±á‡∞∏‡∞µ‡∞ø ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞Ç',
            tips: ['‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞µ‡∞ø‡∞§‡±ç‡∞§‡∞®‡∞æ‡∞≤‡±Å ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø', '6+ ‡∞ó‡∞Ç‡∞ü‡∞≤ ‡∞µ‡±Ü‡∞≤‡±Å‡∞§‡±Å‡∞∞‡±Å ‡∞â‡∞Ç‡∞°‡±á‡∞≤‡∞æ ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø', '‡∞ï‡±ç‡∞∞‡∞Æ‡∞Ç ‡∞§‡∞™‡±ç‡∞™‡∞ï‡±Å‡∞Ç‡∞°‡∞æ ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡∞Ç‡∞°‡∞ø ‡∞ï‡∞æ‡∞®‡±Ä ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞Ç‡∞ó‡∞æ ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡∞µ‡∞¶‡±ç‡∞¶‡±Å']
          },
          {
            title: '‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡∞°‡∞Ç',
            description: '‡∞≤‡±ã‡∞§‡±Å‡∞ó‡∞æ ‡∞ï‡∞æ‡∞®‡±Ä ‡∞Ö‡∞™‡±ç‡∞™‡±Å‡∞°‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡∞ø ‡∞≤‡±ã‡∞§‡±à‡∞® ‡∞µ‡±á‡∞∞‡±ç‡∞≤‡±Å ‡∞™‡±Ü‡∞∞‡±Å‡∞ó‡±Å‡∞ü ‡∞™‡±ç‡∞∞‡±ã‡∞§‡±ç‡∞∏‡∞π‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
            timing: '‡∞µ‡±á‡∞∏‡∞µ‡∞ø‡∞≤‡±ã ‡∞∞‡±ã‡∞ú‡±Ç, ‡∞µ‡∞∞‡±ç‡∞∑‡∞æ‡∞ï‡∞æ‡∞≤‡∞Ç‡∞≤‡±ã ‡∞∞‡±Ü‡∞Ç‡∞°‡±Å ‡∞∞‡±ã‡∞ú‡±Å‡∞≤‡∞ï‡±Å ‡∞í‡∞ï‡∞∏‡∞æ‡∞∞‡∞ø',
            tips: ['‡∞Æ‡±ä‡∞ï‡±ç‡∞ï ‡∞Ö‡∞°‡±Å‡∞ó‡±Å ‡∞≠‡∞æ‡∞ó‡∞Ç‡∞≤‡±ã ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡∞Ç‡∞°‡∞ø', '‡∞Ü‡∞ï‡±Å‡∞≤‡∞®‡±Å ‡∞§‡∞°‡∞ø‡∞™‡∞ø‡∞Ç‡∞ö‡∞µ‡∞¶‡±ç‡∞¶‡±Å', '‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±á ‡∞Æ‡±Å‡∞Ç‡∞¶‡±Å ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø ‡∞§‡±á‡∞Æ‡∞®‡±Å ‡∞§‡∞®‡∞ø‡∞ñ‡±Ä ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø']
          },
          {
            title: '‡∞é‡∞∞‡±Å‡∞µ‡±Å ‡∞µ‡±á‡∞Ø‡∞°‡∞Ç',
            description: '‡∞™‡±ç‡∞∞‡∞§‡∞ø 2-3 ‡∞µ‡∞æ‡∞∞‡∞æ‡∞≤‡∞ï‡±Å ‡∞∏‡∞Æ‡∞§‡±Å‡∞≤‡±ç‡∞Ø ‡∞é‡∞∞‡±Å‡∞µ‡±Å ‡∞µ‡±á‡∞Ø‡∞Ç‡∞°‡∞ø',
            timing: '‡∞™‡±Ü‡∞∞‡±Å‡∞ó‡±Å‡∞ü ‡∞ï‡∞æ‡∞≤‡∞Ç‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞§‡∞ø 2-3 ‡∞µ‡∞æ‡∞∞‡∞æ‡∞≤‡∞ï‡±Å',
            tips: ['‡∞∏‡±á‡∞Ç‡∞¶‡±ç‡∞∞‡±Ä‡∞Ø ‡∞ï‡∞Ç‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø', '‡∞Ö‡∞ß‡∞ø‡∞ï ‡∞é‡∞∞‡±Å‡∞µ‡±Å ‡∞µ‡±á‡∞Ø‡∞µ‡∞¶‡±ç‡∞¶‡±Å', '‡∞ï‡±ã‡∞§ 2 ‡∞µ‡∞æ‡∞∞‡∞æ‡∞≤ ‡∞Æ‡±Å‡∞Ç‡∞¶‡±Å ‡∞é‡∞∞‡±Å‡∞µ‡±Å ‡∞µ‡±á‡∞Ø‡∞°‡∞Ç ‡∞Ü‡∞™‡∞Ç‡∞°‡∞ø']
          }
        ]
      },
      commonIssues: {
        en: [
          {
            problem: 'Yellowing leaves',
            solution: 'Check for overwatering or nutrient deficiency. Adjust watering schedule and add fertilizer.'
          },
          {
            problem: 'Blossom end rot',
            solution: 'Ensure consistent watering and add calcium to soil.'
          }
        ],
        te: [
          {
            problem: '‡∞Ü‡∞ï‡±Å‡∞≤‡±Å ‡∞™‡∞∏‡±Å‡∞™‡±Å ‡∞∞‡∞Ç‡∞ó‡±Å‡∞≤‡±ã‡∞ï‡∞ø ‡∞Æ‡∞æ‡∞∞‡∞°‡∞Ç',
            solution: '‡∞Ö‡∞ß‡∞ø‡∞ï ‡∞®‡±Ä‡∞∞‡±Å ‡∞≤‡±á‡∞¶‡∞æ ‡∞™‡±ã‡∞∑‡∞ï‡∞æ‡∞≤ ‡∞≤‡±ã‡∞™‡∞Ç ‡∞â‡∞Ç‡∞¶‡∞æ ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø. ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡±á ‡∞µ‡∞ø‡∞ß‡∞æ‡∞®‡∞Ç ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ö‡∞ø ‡∞é‡∞∞‡±Å‡∞µ‡±Å ‡∞µ‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.'
          },
          {
            problem: '‡∞™‡±Å‡∞µ‡±ç‡∞µ‡±Å‡∞≤ ‡∞ö‡∞ø‡∞µ‡∞∞ ‡∞ï‡±Å‡∞≥‡±ç‡∞≥‡∞ø‡∞™‡±ã‡∞µ‡∞°‡∞Ç',
            solution: '‡∞∏‡±ç‡∞•‡∞ø‡∞∞‡∞Æ‡±à‡∞® ‡∞®‡±Ä‡∞ü‡∞ø‡∞™‡∞æ‡∞∞‡±Å‡∞¶‡∞≤ ‡∞â‡∞Ç‡∞°‡±á‡∞≤‡∞æ ‡∞ö‡±Ç‡∞∏‡∞ø ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø‡∞≤‡±ã ‡∞ï‡∞æ‡∞≤‡±ç‡∞∑‡∞ø‡∞Ø‡∞Ç ‡∞ï‡∞≤‡∞™‡∞Ç‡∞°‡∞ø.'
          }
        ]
      }
    },
    {
      id: '2',
      name: {
        en: 'Rose',
        te: '‡∞ó‡±Å‡∞≤‡∞æ‡∞¨‡±Ä'
      },
      category: 'flowers',
      difficulty: 'intermediate',
      season: ['winter', 'spring'],
      image: 'üåπ',
      description: {
        en: 'Beautiful flowering plant that requires moderate care. Perfect for adding color to your garden.',
        te: '‡∞Æ‡∞ß‡±ç‡∞Ø‡∞Æ ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞® ‡∞Ö‡∞Ç‡∞¶‡∞Æ‡±à‡∞® ‡∞™‡±Å‡∞∑‡±ç‡∞™ ‡∞Æ‡±ä‡∞ï‡±ç‡∞ï. ‡∞Æ‡±Ä ‡∞§‡±ã‡∞ü‡∞ï‡±Å ‡∞∞‡∞Ç‡∞ó‡±Å‡∞≤‡±Å ‡∞ú‡±ã‡∞°‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Ö‡∞®‡±Å‡∞µ‡±à‡∞®‡∞¶‡∞ø.'
      },
      careSteps: {
        en: [
          {
            title: 'Planting',
            description: 'Plant in well-draining soil with morning sunlight',
            timing: 'Winter season',
            tips: ['Choose disease-resistant varieties', 'Ensure good air circulation', 'Plant in raised beds if possible']
          },
          {
            title: 'Pruning',
            description: 'Regular pruning to maintain shape and encourage blooming',
            timing: 'Late winter/early spring',
            tips: ['Use clean, sharp tools', 'Remove dead and diseased wood', 'Cut at 45-degree angle above outward-facing bud']
          },
          {
            title: 'Pest Control',
            description: 'Monitor for aphids, thrips, and fungal diseases',
            timing: 'Throughout growing season',
            tips: ['Use neem oil for organic control', 'Encourage beneficial insects', 'Remove affected leaves immediately']
          }
        ],
        te: [
          {
            title: '‡∞®‡∞æ‡∞ü‡∞°‡∞Ç',
            description: '‡∞â‡∞¶‡∞Ø‡∞Ç ‡∞µ‡±Ü‡∞≤‡±Å‡∞§‡±Å‡∞∞‡±Å ‡∞â‡∞®‡±ç‡∞® ‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞®‡±Ä‡∞ü‡∞ø ‡∞®‡∞ø‡∞∑‡±ç‡∞ï‡∞æ‡∞∏‡∞® ‡∞â‡∞®‡±ç‡∞® ‡∞Æ‡∞ü‡±ç‡∞ü‡∞ø‡∞≤‡±ã ‡∞®‡∞æ‡∞ü‡∞Ç‡∞°‡∞ø',
            timing: '‡∞ö‡∞≤‡∞ø‡∞ï‡∞æ‡∞≤‡∞Ç',
            tips: ['‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø ‡∞®‡∞ø‡∞∞‡±ã‡∞ß‡∞ï ‡∞∞‡∞ï‡∞æ‡∞≤‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø', '‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞ó‡∞æ‡∞≤‡∞ø ‡∞™‡±ç‡∞∞‡∞∏‡∞∞‡∞£ ‡∞â‡∞Ç‡∞°‡±á‡∞≤‡∞æ ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø', '‡∞µ‡±Ä‡∞≤‡±à‡∞§‡±á ‡∞é‡∞§‡±ç‡∞§‡±à‡∞® ‡∞™‡∞°‡∞ï‡∞≤‡∞≤‡±ã ‡∞®‡∞æ‡∞ü‡∞Ç‡∞°‡∞ø']
          },
          {
            title: '‡∞ï‡∞§‡±ç‡∞§‡∞ø‡∞∞‡∞ø‡∞Ç‡∞ö‡∞°‡∞Ç',
            description: '‡∞Ü‡∞ï‡∞æ‡∞∞‡∞Ç ‡∞®‡∞ø‡∞∞‡±ç‡∞µ‡∞π‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡±Å‡∞∑‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞™‡±ç‡∞∞‡±ã‡∞§‡±ç‡∞∏‡∞π‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞ï‡±ç‡∞∞‡∞Æ‡∞Ç ‡∞§‡∞™‡±ç‡∞™‡∞ï‡±Å‡∞Ç‡∞°‡∞æ ‡∞ï‡∞§‡±ç‡∞§‡∞ø‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
            timing: '‡∞ö‡∞≤‡∞ø‡∞ï‡∞æ‡∞≤‡∞Ç ‡∞ö‡∞ø‡∞µ‡∞∞‡∞ø/‡∞µ‡∞∏‡∞Ç‡∞§‡∞Ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞Ç',
            tips: ['‡∞∂‡±Å‡∞≠‡±ç‡∞∞‡∞Æ‡±à‡∞®, ‡∞™‡∞¶‡±Å‡∞®‡±à‡∞® ‡∞™‡∞∞‡∞ø‡∞ï‡∞∞‡∞æ‡∞≤‡±Å ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø', '‡∞ö‡∞®‡∞ø‡∞™‡±ã‡∞Ø‡∞ø‡∞® ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø‡∞ó‡±ç‡∞∞‡∞∏‡±ç‡∞§ ‡∞ï‡∞≤‡∞™‡∞®‡±Å ‡∞§‡±ä‡∞≤‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø', '‡∞¨‡∞Ø‡∞ü‡∞ø‡∞ï‡∞ø ‡∞ö‡±Ç‡∞∏‡±á ‡∞Æ‡±ä‡∞ó‡±ç‡∞ó ‡∞™‡±à‡∞® 45 ‡∞°‡∞ø‡∞ó‡±ç‡∞∞‡±Ä‡∞≤ ‡∞ï‡±ã‡∞£‡∞Ç‡∞≤‡±ã ‡∞ï‡∞§‡±ç‡∞§‡∞ø‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø']
          },
          {
            title: '‡∞ï‡±Ä‡∞ü‡∞ï ‡∞®‡∞ø‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞£',
            description: '‡∞Ö‡∞´‡∞ø‡∞°‡±ç‡∞∏‡±ç, ‡∞§‡±ç‡∞∞‡∞ø‡∞™‡±ç‡∞∏‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞´‡∞Ç‡∞ó‡∞≤‡±ç ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡±Å‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞ó‡∞Æ‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
            timing: '‡∞™‡±Ü‡∞∞‡±Å‡∞ó‡±Å‡∞ü ‡∞ï‡∞æ‡∞≤‡∞Ç ‡∞Ö‡∞Ç‡∞§‡∞ü‡∞æ',
            tips: ['‡∞∏‡±á‡∞Ç‡∞¶‡±ç‡∞∞‡±Ä‡∞Ø ‡∞®‡∞ø‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞£ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞µ‡±á‡∞™ ‡∞®‡±Ç‡∞®‡±Ü ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø', '‡∞™‡±ç‡∞∞‡∞Ø‡±ã‡∞ú‡∞®‡∞ï‡∞∞‡∞Æ‡±à‡∞® ‡∞ï‡±Ä‡∞ü‡∞ï‡∞æ‡∞≤‡∞®‡±Å ‡∞™‡±ç‡∞∞‡±ã‡∞§‡±ç‡∞∏‡∞π‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø', '‡∞™‡±ç‡∞∞‡∞≠‡∞æ‡∞µ‡∞ø‡∞§ ‡∞Ü‡∞ï‡±Å‡∞≤‡∞®‡±Å ‡∞µ‡±Ü‡∞Ç‡∞ü‡∞®‡±á ‡∞§‡±ä‡∞≤‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø']
          }
        ]
      },
      commonIssues: {
        en: [
          {
            problem: 'Black spot disease',
            solution: 'Improve air circulation, avoid overhead watering, apply fungicide if needed.'
          },
          {
            problem: 'Aphid infestation',
            solution: 'Spray with water, use insecticidal soap, or introduce ladybugs.'
          }
        ],
        te: [
          {
            problem: '‡∞®‡∞≤‡±ç‡∞≤ ‡∞Æ‡∞ö‡±ç‡∞ö ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ß‡∞ø',
            solution: '‡∞ó‡∞æ‡∞≤‡∞ø ‡∞™‡±ç‡∞∞‡∞∏‡∞∞‡∞£ ‡∞Æ‡±Ü‡∞∞‡±Å‡∞ó‡±Å‡∞™‡∞∞‡∞ö‡∞Ç‡∞°‡∞ø, ‡∞™‡±à‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞®‡±Ä‡∞∞‡±Å ‡∞™‡±Ü‡∞ü‡±ç‡∞ü‡∞µ‡∞¶‡±ç‡∞¶‡±Å, ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞§‡±á ‡∞´‡∞Ç‡∞ó‡∞ø‡∞∏‡±à‡∞°‡±ç ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø.'
          },
          {
            problem: '‡∞Ö‡∞´‡∞ø‡∞°‡±ç ‡∞¶‡∞æ‡∞°‡∞ø',
            solution: '‡∞®‡±Ä‡∞ü‡∞ø‡∞§‡±ã ‡∞∏‡±ç‡∞™‡±ç‡∞∞‡±á ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø, ‡∞ï‡±Ä‡∞ü‡∞ï‡∞®‡∞æ‡∞∂‡∞ï ‡∞∏‡∞¨‡±ç‡∞¨‡±Å ‡∞µ‡∞æ‡∞°‡∞Ç‡∞°‡∞ø, ‡∞≤‡±á‡∞¶‡∞æ ‡∞≤‡±á‡∞°‡±Ä‡∞¨‡∞ó‡±ç‚Äå‡∞≤‡∞®‡±Å ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±Å‡∞∞‡∞Ç‡∞°‡∞ø.'
          }
        ]
      }
    }
  ];

  const categories = [
    { key: 'all', label: language === 'te' ? '‡∞Ö‡∞®‡±ç‡∞®‡±Ä' : 'All' },
    { key: 'vegetables', label: language === 'te' ? '‡∞ï‡±Ç‡∞∞‡∞ó‡∞æ‡∞Ø‡∞≤‡±Å' : 'Vegetables' },
    { key: 'flowers', label: language === 'te' ? '‡∞™‡±Å‡∞µ‡±ç‡∞µ‡±Å‡∞≤‡±Å' : 'Flowers' },
    { key: 'herbs', label: language === 'te' ? '‡∞Æ‡±Ç‡∞≤‡∞ø‡∞ï‡∞≤‡±Å' : 'Herbs' },
    { key: 'fruits', label: language === 'te' ? '‡∞™‡∞Ç‡∞°‡±ç‡∞≤‡±Å' : 'Fruits' }
  ];

  const difficulties = [
    { key: 'all', label: language === 'te' ? '‡∞Ö‡∞®‡±ç‡∞®‡∞ø ‡∞∏‡±ç‡∞•‡∞æ‡∞Ø‡∞ø‡∞≤‡±Å' : 'All Levels' },
    { key: 'beginner', label: language === 'te' ? '‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ï‡±Å‡∞°‡±Å' : 'Beginner' },
    { key: 'intermediate', label: language === 'te' ? '‡∞Æ‡∞ß‡±ç‡∞Ø‡∞∏‡±ç‡∞•‡∞æ‡∞Ø‡∞ø' : 'Intermediate' },
    { key: 'advanced', label: language === 'te' ? '‡∞Ö‡∞ß‡±Å‡∞®‡∞æ‡∞§‡∞®' : 'Advanced' }
  ];

  const filteredGuides = plantGuides.filter(guide => {
    const matchesSearch = guide.name[language].toLowerCase().includes(searchQuery.toLowerCase()) ||
                         guide.description[language].toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || guide.category === selectedCategory;
    const matchesDifficulty = selectedDifficulty === 'all' || guide.difficulty === selectedDifficulty;
    
    return matchesSearch && matchesCategory && matchesDifficulty;
  });

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'beginner': return 'bg-green-100 text-green-800';
      case 'intermediate': return 'bg-yellow-100 text-yellow-800';
      case 'advanced': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const downloadGuide = (guide: PlantGuide) => {
    const content = `
${guide.name[language]} - ${language === 'te' ? '‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞≤ ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞ó‡±à‡∞°‡±ç' : 'Plant Care Guide'}
${'='.repeat(50)}

${language === 'te' ? '‡∞µ‡∞ø‡∞µ‡∞∞‡∞£:' : 'Description:'}
${guide.description[language]}

${language === 'te' ? '‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞¶‡∞∂‡∞≤‡±Å:' : 'Care Steps:'}
${guide.careSteps[language].map((step, index) => `
${index + 1}. ${step.title}
   ${step.description}
   ${language === 'te' ? '‡∞∏‡∞Æ‡∞Ø‡∞Ç:' : 'Timing:'} ${step.timing}
   ${language === 'te' ? '‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ‡∞≤‡±Å:' : 'Tips:'}
   ${step.tips.map(tip => `   ‚Ä¢ ${tip}`).join('\n')}
`).join('\n')}

${language === 'te' ? '‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£ ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞≤‡±Å:' : 'Common Issues:'}
${guide.commonIssues[language].map((issue, index) => `
${index + 1}. ${language === 'te' ? '‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø:' : 'Problem:'} ${issue.problem}
   ${language === 'te' ? '‡∞™‡∞∞‡∞ø‡∞∑‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç:' : 'Solution:'} ${issue.solution}
`).join('\n')}
    `;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${guide.name[language]}_care_guide.txt`;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center"
      >
        <h1 className="text-3xl font-bold text-gray-900 mb-2 flex items-center justify-center">
          <BookOpen className="h-8 w-8 mr-3 text-green-600" />
          {language === 'te' ? '‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞≤ ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞ó‡±à‡∞°‡±ç‚Äå‡∞≤‡±Å' : 'Plant Care Guides'}
        </h1>
        <p className="text-gray-600">
          {language === 'te' 
            ? '‡∞¶‡∞∂‡∞≤ ‡∞µ‡∞æ‡∞∞‡±Ä ‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞≤ ‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞∏‡∞≤‡∞π‡∞æ‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ï‡∞æ‡∞≤‡∞æ‡∞®‡±Å‡∞ó‡±Å‡∞£ ‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ‡∞≤‡±Å'
            : 'Step-by-step plant care tips and seasonal guidance'
          }
        </p>
      </motion.div>

      {/* Filters */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.1 }}
        className="bg-white rounded-lg shadow-sm border border-gray-100 p-4"
      >
        <div className="flex flex-col lg:flex-row gap-4">
          {/* Search */}
          <div className="flex-1 relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
            <input
              type="text"
              placeholder={language === 'te' ? '‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞≤‡∞®‡±Å ‡∞µ‡±Ü‡∞§‡∞ï‡∞Ç‡∞°‡∞ø...' : 'Search plants...'}
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
            />
          </div>
          
          {/* Category Filter */}
          <div className="flex items-center space-x-2">
            <Filter className="h-4 w-4 text-gray-400" />
            <select
              value={selectedCategory}
              onChange={(e) => setSelectedCategory(e.target.value)}
              className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
            >
              {categories.map(category => (
                <option key={category.key} value={category.key}>{category.label}</option>
              ))}
            </select>
          </div>

          {/* Difficulty Filter */}
          <div className="flex items-center space-x-2">
            <Star className="h-4 w-4 text-gray-400" />
            <select
              value={selectedDifficulty}
              onChange={(e) => setSelectedDifficulty(e.target.value)}
              className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
            >
              {difficulties.map(difficulty => (
                <option key={difficulty.key} value={difficulty.key}>{difficulty.label}</option>
              ))}
            </select>
          </div>
        </div>
      </motion.div>

      {/* Plant Guides Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filteredGuides.map((guide, index) => (
          <motion.div
            key={guide.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 + index * 0.1 }}
            className="bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow cursor-pointer"
            onClick={() => setSelectedGuide(guide)}
          >
            <div className="p-6">
              <div className="flex items-center justify-between mb-4">
                <div className="text-4xl">{guide.image}</div>
                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(guide.difficulty)}`}>
                  {difficulties.find(d => d.key === guide.difficulty)?.label}
                </span>
              </div>
              
              <h3 className="text-lg font-semibold text-gray-900 mb-2">
                {guide.name[language]}
              </h3>
              
              <p className="text-gray-600 text-sm mb-4 line-clamp-2">
                {guide.description[language]}
              </p>
              
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-2 text-sm text-gray-500">
                  <Calendar className="h-4 w-4" />
                  <span>{guide.season.length} {language === 'te' ? '‡∞ï‡∞æ‡∞≤‡∞æ‡∞≤‡±Å' : 'seasons'}</span>
                </div>
                <ChevronRight className="h-4 w-4 text-gray-400" />
              </div>
            </div>
          </motion.div>
        ))}
      </div>

      {/* Guide Detail Modal */}
      {selectedGuide && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <div className="p-6 border-b border-gray-100">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-4">
                  <div className="text-6xl">{selectedGuide.image}</div>
                  <div>
                    <h3 className="text-2xl font-bold text-gray-900">
                      {selectedGuide.name[language]}
                    </h3>
                    <p className="text-gray-600 mt-1">
                      {selectedGuide.description[language]}
                    </p>
                    <span className={`inline-block mt-2 px-3 py-1 rounded-full text-sm font-medium ${getDifficultyColor(selectedGuide.difficulty)}`}>
                      {difficulties.find(d => d.key === selectedGuide.difficulty)?.label}
                    </span>
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <button
                    onClick={() => downloadGuide(selectedGuide)}
                    className="p-2 text-blue-600 hover:text-blue-700 transition-colors"
                    title={language === 'te' ? '‡∞ó‡±à‡∞°‡±ç ‡∞°‡±å‡∞®‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø' : 'Download guide'}
                  >
                    <Download className="h-5 w-5" />
                  </button>
                  <button
                    onClick={() => setSelectedGuide(null)}
                    className="p-2 text-gray-400 hover:text-gray-600 transition-colors"
                  >
                    √ó
                  </button>
                </div>
              </div>
            </div>
            
            <div className="p-6 space-y-6">
              {/* Care Steps */}
              <div>
                <h4 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                  <Leaf className="h-5 w-5 mr-2 text-green-600" />
                  {language === 'te' ? '‡∞∏‡∞Ç‡∞∞‡∞ï‡±ç‡∞∑‡∞£ ‡∞¶‡∞∂‡∞≤‡±Å' : 'Care Steps'}
                </h4>
                <div className="space-y-4">
                  {selectedGuide.careSteps[language].map((step, index) => (
                    <div key={index} className="bg-gray-50 rounded-lg p-4">
                      <div className="flex items-center space-x-2 mb-2">
                        <span className="flex items-center justify-center w-6 h-6 bg-green-100 text-green-600 rounded-full text-sm font-medium">
                          {index + 1}
                        </span>
                        <h5 className="font-medium text-gray-900">{step.title}</h5>
                        <div className="flex items-center text-sm text-gray-500">
                          <Clock className="h-4 w-4 mr-1" />
                          {step.timing}
                        </div>
                      </div>
                      <p className="text-gray-700 mb-3">{step.description}</p>
                      <div>
                        <p className="text-sm font-medium text-gray-900 mb-1">
                          {language === 'te' ? '‡∞ö‡∞ø‡∞ü‡±ç‡∞ï‡∞æ‡∞≤‡±Å:' : 'Tips:'}
                        </p>
                        <ul className="space-y-1">
                          {step.tips.map((tip, tipIndex) => (
                            <li key={tipIndex} className="text-sm text-gray-600 flex items-start">
                              <span className="w-1.5 h-1.5 bg-green-500 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                              {tip}
                            </li>
                          ))}
                        </ul>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Common Issues */}
              <div>
                <h4 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                  <Bug className="h-5 w-5 mr-2 text-red-600" />
                  {language === 'te' ? '‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£ ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞≤‡±Å' : 'Common Issues'}
                </h4>
                <div className="space-y-3">
                  {selectedGuide.commonIssues[language].map((issue, index) => (
                    <div key={index} className="bg-red-50 border border-red-200 rounded-lg p-4">
                      <h5 className="font-medium text-red-800 mb-2">
                        {language === 'te' ? '‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø:' : 'Problem:'} {issue.problem}
                      </h5>
                      <p className="text-red-700 text-sm">
                        <strong>{language === 'te' ? '‡∞™‡∞∞‡∞ø‡∞∑‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç:' : 'Solution:'}</strong> {issue.solution}
                      </p>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}